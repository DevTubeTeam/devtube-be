generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id         BigInt    @id @default(autoincrement())
  video_id   String?   @db.Uuid
  user_id    String?   @db.Uuid
  content    String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
}

model likes {
  id         BigInt    @id @default(autoincrement())
  user_id    String?   @db.Uuid
  video_id   String?   @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@unique([user_id, video_id])
}

model users {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  display_name   String?
  email          String    @unique
  oauth_provider String
  oauth_id       String
  metadata       Json?     @default("{}")
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  last_login     DateTime? @db.Timestamp(6)

  @@unique([oauth_provider, oauth_id])
}

model videos {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id       String?      @db.Uuid
  title         String
  description   String?
  video_url     String
  thumbnail_url String
  duration      Int
  views         BigInt?      @default(0)
  privacy       vid_privacy? @default(public)
  status        vid_status?  @default(processing)
  created_at    DateTime?    @default(now()) @db.Timestamp(6)
  updated_at    DateTime?    @default(now()) @db.Timestamp(6)
}

enum vid_privacy {
  public
  private
  unlisted
}

enum vid_status {
  processing
  ready
  failed
}
