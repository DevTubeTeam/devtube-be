name: Api Gateway Dockerize

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - 'api-gateway/**'
      - '.github/workflows/api-gateway-*.yml'

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  dockerize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR Public
        run: |
          aws ecr-public get-login-password \
            | docker login --username AWS --password-stdin public.ecr.aws
      
      - name: Create ECR repository if not exists
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: api-gateway
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" \
            || aws ecr create-repository --repository-name "$ECR_REPOSITORY" --region "$AWS_REGION"

      - name: Build and push Docker image
        env:
          REPO_NAME: api-gateway
          IMAGE_TAG: latest
          ECR_PUBLIC_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
        run: |
          IMAGE_URI=public.ecr.aws/$ECR_PUBLIC_ALIAS/$REPO_NAME:$IMAGE_TAG
          docker build -t $IMAGE_URI ./auth-service
          docker push $IMAGE_URI
